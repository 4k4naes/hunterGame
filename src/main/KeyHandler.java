package main;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import dataBase.historyOfMoves;

/**
 * The KeyHandler class implements KeyListener to handle user input from the keyboard.
 * It listens for key events and updates the corresponding movement flags based on the keys pressed or released.
 * This class is typically used to manage the player's movement within the game.
 */
public class KeyHandler implements KeyListener {

    // Flags to track whether a specific movement key is pressed
    public boolean upPressed, downPressed, leftPressed, rightPressed;

    GamePanel gp;
    
    public KeyHandler(GamePanel gp) {
    	this.gp = gp;
    }
    
    /**
     * Called when a key is typed. This method is empty because keyTyped is not used for movement detection.
     *
     * @param e The KeyEvent generated by the key typed action.
     */
    @Override
    public void keyTyped(KeyEvent e) {
    }

    /**
     * Called when a key is pressed. It updates the movement flags to true for the respective key.
     * The movement keys are:
     * - W for moving up
     * - S for moving down
     * - A for moving left
     * - D for moving right
     *
     * @param e The KeyEvent generated by the key press action.
     */
    @Override
    public void keyPressed(KeyEvent e) {
        int code = e.getKeyCode();

        // Update flags based on the key pressed
        if (code == KeyEvent.VK_W) {
            upPressed = true;
        }
        if (code == KeyEvent.VK_S) {
            downPressed = true;
        }
        if (code == KeyEvent.VK_A) {
            leftPressed = true;
        }
        if (code == KeyEvent.VK_D) {
            rightPressed = true;
        }
        if (code == KeyEvent.VK_P) {
        	System.out.println(gp.gameState);
        	if(gp.gameState == gp.playState) {
        		gp.gameState = gp.pauseState;
        	} else if(gp.gameState == gp.pauseState) {
        		gp.gameState = gp.playState;
        	}
//        	switch(gp.gameState) {
//        	case 1:
//        		gp.gameState = gp.playState;        		
//        	case 0:
//        		gp.gameState = gp.pauseState;
//        	}
        }
        if (code == KeyEvent.VK_H) {
        	historyOfMoves.seeTheHistory();
        }
    }

    /**
     * Called when a key is released. It updates the movement flags to false for the respective key.
     * The movement keys are:
     * - W for moving up
     * - S for moving down
     * - A for moving left
     * - D for moving right
     *
     * @param e The KeyEvent generated by the key release action.
     */
    @Override
    public void keyReleased(KeyEvent e) {
        int code = e.getKeyCode();

        // Reset flags when the key is released
        if (code == KeyEvent.VK_W) {
            upPressed = false;
        }
        if (code == KeyEvent.VK_S) {
            downPressed = false;
        }
        if (code == KeyEvent.VK_A) {
            leftPressed = false;
        }
        if (code == KeyEvent.VK_D) {
            rightPressed = false;
        }
    }
}
